name: OneClickTests-Update
  
run-name: >
  Update workspace from old version test.

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - '.github/**'
      - 'tests/**'
      - '**/README.md'

  workflow_dispatch:
    inputs:
      centos8s:
        type: boolean
        description: 'CentOS 8 Stream'
        default: true
      centos9s:
        type: boolean
        description: 'CentOS 9 Stream'
        default: true
      debian10:
        type: boolean
        description: 'Debian 10'
        default: true
      debian11:
        type: boolean
        description: 'Debian 11'
        default: true
      debian12:
        type: boolean
        description: 'Debian 12'
        default: true
      ubuntu2004:
        type: boolean
        description: 'Ubuntu 20.04'
        default: true
      ubuntu2204:
        type: boolean
        description: 'Ubuntu 22.04'
        default: true  

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:

      - name: Set matrix names
        id: set-matrix
        run: |
          matrix=$(echo '{
            "include": [
              {"execute": '${{ github.event.inputs.centos8s || true }}', "name": "CentOS8S", "os": "workspace-centos8s", "distr": "onlyoffice"},
              {"execute": '${{ github.event.inputs.centos9s || true }}', "name": "CentOS9S", "os": "workspace-centos9s", "distr": "onlyoffice"},
              {"execute": '${{ github.event.inputs.debian10 || true }}', "name": "Debian10", "os": "workspace-debian10", "distr": "onlyoffice"},
              {"execute": '${{ github.event.inputs.debian11 || true }}', "name": "Debian11", "os": "workspace-debian11", "distr": "onlyoffice"},
              {"execute": '${{ github.event.inputs.debian12 || true }}', "name": "Debian12", "os": "workspace-debian12", "distr": "onlyoffice"},
              {"execute": '${{ github.event.inputs.ubuntu2004 || true }}', "name": "Ubuntu20.04", "os": "workspace-ubuntu2004", "distr": "onlyoffice"},
              {"execute": '${{ github.event.inputs.ubuntu2204 || true }}', "name": "Ubuntu22.04", "os": "workspace-ubuntu2204", "distr": "onlyoffice"}
            ]
          }' | jq -c '{include: [.include[] | select(.execute == true)]}')
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT

  update-test:
    name: "Update test on ${{ matrix.name }}"
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
    needs: prepare
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare.outputs.matrix)}}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Free Disk Space
      run: |
        sudo rm -rf /usr/local/lib/android /opt/ghc
        sudo docker image prune --all --force       

    - name: Get update and install vagrant
      run: |
        set -eux
        sudo wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        sudo echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt update -y
        sudo apt install vagrant virtualbox -y

    - name: Testing with update
      uses: nick-fields/retry@v2
      with:
        max_attempts: 1
        timeout_minutes: 90
        retry_on: error
        command: |
              cd ./tests/vagrant
              set -eux

              TEST_CASE='--local-install' \
              DISTR='${{matrix.distr}}' \
              RAM='6100' \
              CPU='2' \
              OS='${{ matrix.os }}' \
              DOWNLOAD_SCRIPT='-ds false' \
              TEST_REPO='-tr true' \
              ARGUMENTS="-arg '--skiphardwarecheck true --makeswap false --localscripts true --update true'" \
              vagrant up
              sleep 10
              vagrant destroy --force
        on_retry_command: |
             set -eux
             echo "Clean-up and one more try"
             cd ./tests/vagrant
             vagrant destroy --force
